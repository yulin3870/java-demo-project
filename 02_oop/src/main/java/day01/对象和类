
Java 基础语法
    一个 Java 程序可以认为是一系列对象的集合，而这些对象通过调用彼此的方法来协同工作。
    1）对象：对象是类的一个实例，有状态和行为。例如，一条狗是一个对象，它的状态有：颜色、名字、品种；行为有：摇尾巴、叫、吃等。
    2）类：类是一个模板，它描述一类对象的行为和状态。
    3）方法：方法就是行为，一个类可以有很多方法。逻辑运算、数据修改以及所有动作都是在方法中完成的。
    4）实例变量：每个对象都有独特的实例变量，对象的状态由这些实例变量的值决定。

Java 对象和类
Java作为一种面向对象语言。支持以下基本概念：

多态、继承、封装、抽象、类、对象、实例、方法、重载

    对象：对象是类的一个实例（对象不是找个女朋友），有状态和行为。例如，一条狗是一个对象，它的状态有：颜色、名字、品种；行为有：摇尾巴、叫、吃等。
    类：类是一个模板，它描述一类对象的行为和状态。

Java中的对象
    现在让我们深入了解什么是对象。看看周围真实的世界，会发现身边有很多对象，车，狗，人等等。所有这些对象都有自己的状态和行为。
    拿一条狗来举例，它的状态有：名字、品种、颜色，行为有：叫、摇尾巴和跑。
    对比现实对象和软件对象，它们之间十分相似。
    软件对象也有状态和行为。软件对象的状态就是属性，行为通过方法体现。
    在软件开发中，方法操作对象内部状态的改变，对象的相互调用也是通过方法来完成。

一个类可以包含以下类型变量：
    1)局部变量：在方法、构造方法或者语句块中定义的变量被称为局部变量。变量声明和初始化都是在方法中，方法结束后，变量就会自动销毁。
    2)成员变量：成员变量是定义在类中，方法体之外的变量。这种变量在创建对象的时候实例化。成员变量可以被类中方法、构造方法和特定类的语句块访问。
    3)类变量：类变量也声明在类中，方法体之外，但必须声明为 static 类型。

构造方法
    每个类都有构造方法。如果没有显式地为类定义构造方法，Java 编译器将会为该类提供一个默认构造方法。
    在创建一个对象的时候，至少要调用一个构造方法。构造方法的名称必须与类同名，一个类可以有多个构造方法。

创建对象
    对象是根据类创建的。在Java中，使用关键字 new 来创建一个新的对象。创建对象需要以下三步：
    1)声明：声明一个对象，包括对象名称和对象类型。
    2)实例化：使用关键字 new 来创建一个对象。
    3)初始化：使用 new 创建对象时，会调用构造方法初始化对象。

源文件声明规则
    1)一个源文件中只能有一个 public 类
    2)一个源文件可以有多个非 public 类
    3)源文件的名称应该和 public 类的类名保持一致。例如：源文件中 public 类的类名是 Employee，那么源文件应该命名为Employee.java。
    4)如果一个类定义在某个包中，那么 package 语句应该在源文件的首行。
    5)如果源文件包含 import 语句，那么应该放在 package 语句和类定义之间。如果没有 package 语句，那么 import 语句应该在源文件中最前面。
    6)import 语句和 package 语句对源文件中定义的所有类都有效。在同一源文件中，不能给不同的类不同的包声明。
